@page "/Emails"
@inherits OwningComponentBase<IEmailDataService>
@using Services
@using BlazorProject.Models




@if (emails.Count < 0 || emails == null)
{
    <h2>Loading..</h2>
}
else
{
    if(!string.IsNullOrWhiteSpace(errormessage))
    { 
    <h3 class="alert-danger">@errormessage</h3>
    }
    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var em in emails)
            {
                <tr>
                    <td>@em.EmailAddress</td>
                    <td><button type="button" class="btn btn-link" @onclick="@(() => DeleteEmail(em))">Delete</button></td>
                    <td><a href="/EditEmail/@em.Id">Edit Email</a></td>
                    <td><a href="/AddTag">Add Tag</a></td>
                    <td><a href="/EditTags/@em.Id">Edit Tag</a></td>
                </tr>
            }
        </tbody>
    </table>
    <EditForm Model="@email" OnValidSubmit="@AddEmail">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <input type="text" @bind="@email.EmailAddress" />
        <button type="submit" class="btn-link btn">CREATE</button>
    </EditForm>

    }


@code {
    List<Email> emails;
    Email email = new Email();
    string errormessage;

    protected async override Task OnInitializedAsync()
    {
        errormessage = "";
        emails = new List<Email>();
        await LoadAllData();
        email.EmailAddress = null;
    }

    private async Task AddEmail()
    {
        var a = this.Service.Create(email);
        await OnInitializedAsync();
    }

    protected async Task LoadAllData()
    {
        emails = await _emailDataService.GetAllEmails();
    }

    private async Task DeleteEmail(Email entity)
    {
        errormessage = "";
        var result = await _emailDataService.Delete(entity);
        this.StateHasChanged();
        if(result.ToString().ToLower() != "ok")
        {
            errormessage = result;
        }
        
    }
}
